import {HearsContext, Context, InlineKeyboard} from "grammy";
import {Command} from "../structures/Command";
import {Channel} from "../schemas/Channel.schema";
import {Admin} from "../schemas/Admin.schema";
import {User} from "../schemas/User.schema";

export default class MyChannels extends Command {
    constructor() {
        super({name: "mychannels"});
    }


    async run(ctx: HearsContext<Context>, bot) {
        const ctxUser = await ctx.getAuthor();
        const admin = await Admin.findOne({_id: ctxUser.user.id});
        const channels = await Channel.find({admin: ctxUser.user.id});
        const channelsPanel = new InlineKeyboard()

        console.log(await Admin.find())

        channels.forEach((channel, index) => {
            channelsPanel.text(channel.name, "channel_" + channel._id).row()
        })

        channelsPanel.text("‚ùî –ù—é–∞–Ω—Å—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–ª–∞", "faq").row()

        if(admin?.isTrueAdmin || admin?.isHeadAdmin) {
            channelsPanel.text("üìä –ê–¥–º–∏–Ω. –ø–∞–Ω–µ–ª—å", "admin").row()
        }

        const mainMessage = await ctx.reply(`${channels.length ? "‚úÖ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏" : "‚ùå –ù–µ—Ç –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\n–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –Ω–∞ –ø—Ä–∞–≤–∞—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –≤—ã –≤—Å—ë —Å–¥–µ–ª–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ - –≤–∞–º –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"}`, {
            reply_markup: channelsPanel,
        });

        await Admin.updateOne({_id: ctxUser.user.id}, {
            $set: {
                mainMessage: mainMessage.message_id,
            },
            $unset: {
                futurePost: 1
            }
        });
    }
}