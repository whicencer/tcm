import {InlineKeyboard} from "grammy";
import {Button} from "../structures/Button";
import {Channel} from "../schemas/Channel.schema";
import {Admin} from "../schemas/Admin.schema";

export default class ApproveAll extends Button {
    constructor() {
        super({ name: "approve-all" });
    }

    async run(ctx, bot) {
        const ctxUser = await ctx.getAuthor();
        const admin = await Admin.findOne({_id: ctxUser.user.id});
        const channel = await Channel.findOne({_id: admin.editingChannel});

        const inlineKeyboard = new InlineKeyboard()
            .text("üîô –ù–∞–∑–∞–¥", "back-channel-2").row()

        const buttonRow = inlineKeyboard.row();

        if(!channel.autoApprove.switched) {
            await ctx.api.editMessageText(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, `‚úÖ –£—Å–ø–µ—à–Ω–æ! –ü—Ä–æ—Ü–µ—Å—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –Ω–∞—á–∞—Ç`);
            await ctx.api.editMessageReplyMarkup(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, {reply_markup: buttonRow});
            for (const id of channel.requestsList) {
                await ctx.api.approveChatJoinRequest(admin.editingChannel, id);
            }

            channel.requestsList = undefined;
            await channel.save();
        } else {
            await ctx.api.editMessageText(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, `‚ùå –ù–µ–ª—å–∑—è –æ–¥–æ–±—Ä–∏—Ç—å –≤—Å–µ –∑–∞—è–≤–∫–∏, —Ç–∞–∫ –∫–∞–∫ —É –≤–∞—Å —Ä–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫!`);
            await ctx.api.editMessageReplyMarkup(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, {reply_markup: buttonRow});
        }
        await ctx.answerCallbackQuery()
    }
}