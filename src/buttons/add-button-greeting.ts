import {InlineKeyboard} from "grammy";
import {Button} from "../structures/Button";
import {Admin} from "../schemas/Admin.schema";
import {Channel} from "../schemas/Channel.schema";

export default class AddCreatedButtonGreeting extends Button {
    constructor() {
        super({name: "add-buttongreeting"});
    }

    async run(ctx, bot) {
        const ctxUser = await ctx.getAuthor();
        const admin = await Admin.findOne({_id: ctxUser.user.id});
        const channel = await Channel.findOne({_id: admin.editingChannel});

        if(channel.greeting[admin.secondValue].image && typeof channel.greeting[admin.secondValue].image !== "string") {
            const inlineKeyboard = new InlineKeyboard()
                .text("üìñ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", "edit-text-greeting").row()
                .text("üñºÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "edit-image-greeting").row()
                .text("‚åö –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π", "edit-timeout-greeting").row()
                .text("‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º", "edit-delete-greeting").row()
                .text("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É", "add-buttongreeting").row()
                .text("‚ùì –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–Ω–æ–ø–∫–∏", "delete-buttons-greeting").row()
                .text("üîô –ù–∞–∑–∞–¥", "back-channel-greeting").row();

            const buttonRow = inlineKeyboard.row();

            await ctx.api.editMessageText(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, "‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏");
            await ctx.api.editMessageReplyMarkup(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, {reply_markup: buttonRow});
            await ctx.answerCallbackQuery()
        } else {
            await Admin.updateOne({_id: ctxUser.user.id}, {
                inputMode: true,
                command: "greetedit 3",
                mainMessage: ctx.update.callback_query.message.message_id,
                cleanMessages: true
            });
            const inlineKeyboard = new InlineKeyboard()
                .text("üîô –ù–∞–∑–∞–¥", "back-channel-greeting").row()

            const buttonRow = inlineKeyboard.row();
            await ctx.api.editMessageText(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, "‚ùî –°–æ–∑–¥–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ —Å—Ö–µ–º–µ:\n" +
                "–ü—Ä–∏–º–µ—Ä1:\n" +
                "–¢–µ–∫—Å—Ç - —Å—Å—ã–ª–∫–∞\n" +
                "–¢–µ–∫—Å—Ç - —Å—Å—ã–ª–∫–∞\n" +
                "(–∫–Ω–æ–ø–∫–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ)\n" +
                "\n" +
                "–ü—Ä–∏–º–µ—Ä2:\n" +
                "–¢–µ–∫—Å—Ç - —Å—Å—ã–ª–∫–∞ | –¢–µ–∫—Å—Ç - —Å—Å—ã–ª–∫–∞\n" +
                "–¢–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ç–æ—Ä—É—é –∫–Ω–æ–ø–∫—É –≤–ø—è–¥ —Å –ø–æ–º–æ—â—å—é —Å–∏–º–≤–æ–ª–∞ \"|\"\n" +
                "(–∫–Ω–æ–ø–∫–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ)");            await ctx.api.editMessageReplyMarkup(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, {reply_markup: buttonRow});
            await ctx.answerCallbackQuery()
        }
    }
}