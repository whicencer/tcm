import {InlineKeyboard} from "grammy";
import {Button} from "../structures/Button";
import {Admin} from "../schemas/Admin.schema";
import {Channel} from "../schemas/Channel.schema";

export default class DeleteCreatedButtonsLeaving extends Button {
    constructor() {
        super({name: "delete-created-buttons-leaving"});
    }

    async run(ctx, bot) {
        const ctxUser = await ctx.getAuthor();
        const admin = await Admin.findOne({_id: ctxUser.user.id});
        const channel = await Channel.findOne({_id: admin.editingChannel});

        if(channel.leaving[channel.leaving.length - 1].image && typeof channel.leaving[channel.leaving.length - 1].image !== "string") {
            const inlineKeyboard = new InlineKeyboard()
                .text("üìñ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", "edit-created-text-leaving").row()
                .text("üñºÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "edit-created-image-leaving").row()
                .text("‚åö –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π", "edit-created-timeout-leaving").row()
                .text("‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º", "edit-created-delete-leaving").row()
                .text("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É", "add-created-buttonleaving").row()
                .text("‚ùì –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–Ω–æ–ø–∫–∏", "delete-created-buttons-leaving").row()
                .text("üîô –ù–∞–∑–∞–¥", "back-channel-leaving").row();

            const buttonRow = inlineKeyboard.row();
            await ctx.api.editMessageText(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, "‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏");
            await ctx.api.editMessageReplyMarkup(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, {reply_markup: buttonRow});
            await ctx.answerCallbackQuery()
        } else {
            channel.leaving[channel.leaving.length - 1].buttons = [];
            await channel.save();

            const inlineKeyboard = new InlineKeyboard()
                .text("üìñ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", "edit-created-text-leaving").row()
                .text("üñºÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "edit-created-image-leaving").row()
                .text("‚åö –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π", "edit-created-timeout-leaving").row()
                .text("‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º", "edit-created-delete-leaving").row()
                .text("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É", "add-created-buttonleaving").row()
                .text("‚ùì –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–Ω–æ–ø–∫–∏", "delete-created-buttons-leaving").row()
                .text("üîô –ù–∞–∑–∞–¥", "back-channel-leaving").row();

            const buttonRow = inlineKeyboard.row();
            await ctx.api.editMessageText(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, "‚úÖ –£—Å–ø–µ—à–Ω–æ! –í—Å–µ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω—ã\n‚öôÔ∏è –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å");
            await ctx.api.editMessageReplyMarkup(ctx.update.callback_query.message.chat.id, ctx.update.callback_query.message.message_id, {reply_markup: buttonRow});
            await ctx.answerCallbackQuery()
        }
    }
}